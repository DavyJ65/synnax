name: "Synnax Build"
on:
  push:
  workflow_dispatch:
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Diff Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - 'synnax/**'
              - 'cesium/**'
              - 'x/**'
              - 'delta/**'
              - 'freighter/go/**'
              - '.github/workflows/synnax.build.yaml'

      - name: Download latest earthly
        if: steps.filter.outputs.changed == 'true'
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.22/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"

      - name: Login to Docker Hub
        if: steps.filter.outputs.changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        if: steps.filter.outputs.changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Evaluate Version
        if: steps.filter.outputs.changed == 'true'
        id: version

        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          fi

      - name: Build Image and Push to Github Container Registry
        if: steps.filter.outputs.changed == 'true'
        run: earthly --push +docker -tag=${{ steps.version.outputs.VERSION }}
        working-directory: ./synnax

      - name: Rename Image
        if: steps.filter.outputs.changed == 'true'
        run: |
          docker tag ghcr.io/synnaxlabs/synnax:${{ steps.version.outputs.VERSION }} synnaxlabs/synnax:${{ steps.version.outputs.VERSION }}
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker tag ghcr.io/synnaxlabs/synnax:${{ steps.version.outputs.VERSION }} synnaxlabs/synnax:latest
          fi

      - name: Push to Docker Hub
        if: steps.filter.outputs.changed == 'true'
        run: |
          docker push synnaxlabs/synnax:${{ steps.version.outputs.VERSION }}
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker push synnaxlabs/synnax:latest
          fi

  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Diff Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - 'synnax/**'
              - 'cesium/**'
              - 'x/**'
              - 'delta/**'
              - 'freighter/go/**'
              - '.github/workflows/synnax.build.yaml'

      - name: Get Version
        if: steps.filter.outputs.changed == 'true'
        id: version
        working-direction: ./synnax
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Create Release
        if: steps.filter.outputs.changed == 'true'
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { id } } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `synnax-v${{ steps.version.outputs.VERSION }}`,
              name: `synnax-v${{ steps.version.outputs.VERSION }}`,
              draft: false,
              prerelease: false,
            })
            return id

  build:
    needs: create-release
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Diff Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - 'synnax/**'
              - 'cesium/**'
              - 'x/**'
              - 'delta/**'
              - 'freighter/go/**'
              - '.github/workflows/synnax.build.yaml'

      - name: Set up Go
        if: steps.filter.outputs.changed == 'true'
        uses: actions/setup-go@v2
        with:
          go-version: 1.20

      - name: Build
        if: steps.filter.outputs.changed == 'true'
        run: |
          go build -o synnax ./synnax/main.go

      - name: Get Version
        if: steps.filter.outputs.changed == 'true'
        id: version
        working-direction: ./synnax
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Upload Release Asset
        if: steps.filter.outputs.changed == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./synnax
          asset_name: synnax-${{ matrix.platform }}-${{ steps.version.outputs.VERSION }}
          asset_content_type: application/octet-stream
