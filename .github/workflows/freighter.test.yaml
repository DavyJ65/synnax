name: "Freighter Test"
on:
  pull_request:
    branches:
      - main
  push:
    paths:
      - 'freighter/**'
      - '.github/workflows/freighter.test.yaml'
jobs:
  test-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Test
        run: go test -v ./... --covermode=atomic --coverprofile=coverage.txt --ginkgo.label-filter="!integration && !performance"
        working-directory: ./freighter/go
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./freighter/go
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: freightergo

  build-integration-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download latest earthly
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.22/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
      - name: Build Image
        run: earthly --push +docker
        working-directory: ./freighter/integration


  test-python:
    needs: [ build-integration-image ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install
        working-directory: ./freighter/py

      - name: Test
        run: pytest --cov=freighter --cov-report xml:coverage.xml
        working-directory: ./freighter/py

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./freighter/py
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: freighterpy

    services:
      integration:
        image: ghcr.io/synnaxlabs/freighter-go-integration:latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080

  test-typescript:
    needs: [ build-integration-image ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install Dependencies
        run: yarn
        working-directory: ./freighter/ts

      - name: Test
        run: yarn cov
        working-directory: ./freighter/ts

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./freighter/ts
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: freighterts

    services:
      integration:
        image: ghcr.io/synnaxlabs/freighter-go-integration:latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080