name: "Delta Release"
on:
  pull_request:
jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Get Version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        working-directory: ./delta

      - name: Create Release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { id } }  = await github.rest.repos.createRelease({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          tag_name: `app-v${process.env.PACKAGE_VERSION}`,
                          name: `Synnax Delta v${process.env.PACKAGE_VERSION}`,
                          body: "Synnax Delta Release",
                          draft: true,
                          prerelease: false,
            })
            return id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Dependencies on Ubuntu
        if: matrix.platform == "ubuntu-20.04"
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install Dependencies and Build
        run: yarn && yarn build:delta

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    - name: Publish Release
      id: publish-release
      uses: actions/github-script@v6
      env:
        release_id: ${{ needs.create-release.outputs.release_id }}
      with:
        script: |
          github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false,
          })
