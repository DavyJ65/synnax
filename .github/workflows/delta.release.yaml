name: "Delta Release"
on:
  push:

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        working-directory: ./delta

      - name: Create Release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: { id } }  = await github.rest.repos.createRelease({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          tag_name: `delta-v${process.env.PACKAGE_VERSION}`,
                          name: `Synnax Delta v${process.env.PACKAGE_VERSION}`,
                          body: "Synnax Delta Release",
                          draft: true,
                          prerelease: false,
            })
            return id

  publish-release:
    runs-on: ubuntu-20.04
    needs: [ create-release ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get Version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        working-directory: ./delta

      - name: Add Auto Update JSON File
        id: auto-update-json-file
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            const fs = await import("fs");
            const fetch = await import("node-fetch");

            const packageVersion = process.env.PACKAGE_VERSON;
            const {
                repo: { repo, owner },
            } = context;

            const baseURL = `https://github.com/${owner}/${repo}/releases/download/app-v${packageVersion}/`;

            const darwinURL = baseURL + "Synnax.app.tar.gz";
            const linuxURL = baseURL + `synnax_${packageVersion}_amd64.AppImage.tar.gz`;
            const windowsURL = baseURL + `Synnax_${packageVersion}_x64_en-US.msi.zip`;
            const pub_date = new Date().toISOString().replace(/\.\d{3}Z$/, "Z");

            const data = {
                version: `v${packageVersion}`,
                notes: "Synnax Update",
                pub_date,
                platforms: {
                    "darwin-x86_64": {
                        signature: await (await fetch(darwinURL + ".sig")).text(),
                        url: darwinURL,
                    },
                    "linux-x86_64": {
                        signature: await (await fetch(linuxURL + ".sig")).text(),
                        url: linuxURL,
                    },
                    "windows-x86_64": {
                        signature: await (await fetch(windowsURL + ".sig")).text(),
                        url: windowsURL,
                    },
                },
            };

            fs.writeFileSync("delta/release-spec.json", JSON.stringify(data, null, 2));


      - name: Commit Auto Update JSON File
        id: commit-auto-update-json-file
        uses: EndBug/add-and-commit@v9
        with:
          add: "*"
          default_author: github_actor
          message: "Auto Update JSON File"
