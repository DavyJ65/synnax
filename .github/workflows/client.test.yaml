name: "Client Test"
on:
  pull_request:
    branches:
      - main
  push:
    paths:
      - 'client/**'
      - '.github/workflows/client.test.yaml'
jobs:
  test-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install
        working-directory: ./client/py

      - name: Test
        run: pytest --cov=freighter --cov-report xml:coverage.xml
        working-directory: ./client/py

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./client/py
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: clientpy

    services:
      synnax:
        image: ghcr.io/synnaxlabs/synnax:latest
        env:
          SYNNAX_LISTEN_ADDRESS: localhost:8080
          SYNNAX_DEBUG: true
          SYNNAX_MEM: true

        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080


  test-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install Dependencies
        run: yarn
        working-directory: ./client/ts

      - name: Test
        run: yarn cov
        working-directory: ./client/ts

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./client/ts
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: clientts

    services:
      synnax:
        image: ghcr.io/synnaxlabs/synnax:latest
        env:
          SYNNAX_LISTEN_ADDRESS: localhost:8080
          SYNNAX_DEBUG: true
          SYNNAX_MEM: true

        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080




