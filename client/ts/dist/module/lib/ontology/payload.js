import { z } from 'zod';
export var OntologyResourceType;
(function (OntologyResourceType) {
    OntologyResourceType["Builtin"] = "builtin";
    OntologyResourceType["Cluster"] = "cluster";
    OntologyResourceType["Channel"] = "channel";
    OntologyResourceType["Node"] = "node";
})(OntologyResourceType || (OntologyResourceType = {}));
export const ontologyIdSchema = z.object({
    type: z.nativeEnum(OntologyResourceType),
    key: z.string(),
});
export class OntologyID {
    type;
    key;
    constructor(type, key) {
        this.type = type;
        this.key = key;
    }
    toString() {
        return `${this.type}:${this.key}`;
    }
    static parseString(str) {
        const [type, key] = str.split(':');
        return new OntologyID(type, key);
    }
}
export const OntologyRoot = new OntologyID(OntologyResourceType.Builtin, 'root');
export const ontologySchemaFieldSchema = z.object({
    type: z.number(),
});
export const ontologySchemaSchema = z.object({
    type: z.nativeEnum(OntologyResourceType),
    fields: z.record(ontologySchemaFieldSchema),
});
export const ontologyResourceSchema = z.object({
    id: ontologyIdSchema.transform((id) => new OntologyID(id.type, id.key)),
    entity: z.object({
        schema: ontologySchemaSchema,
        name: z.string(),
        data: z.record(z.unknown()),
    }),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bG9hZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvb250b2xvZ3kvcGF5bG9hZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sS0FBSyxDQUFDO0FBRXhCLE1BQU0sQ0FBTixJQUFZLG9CQUtYO0FBTEQsV0FBWSxvQkFBb0I7SUFDOUIsMkNBQW1CLENBQUE7SUFDbkIsMkNBQW1CLENBQUE7SUFDbkIsMkNBQW1CLENBQUE7SUFDbkIscUNBQWEsQ0FBQTtBQUNmLENBQUMsRUFMVyxvQkFBb0IsS0FBcEIsb0JBQW9CLFFBSy9CO0FBRUQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUN2QyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQztJQUN4QyxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRTtDQUNoQixDQUFDLENBQUM7QUFFSCxNQUFNLE9BQU8sVUFBVTtJQUNyQixJQUFJLENBQXVCO0lBQzNCLEdBQUcsQ0FBUztJQUVaLFlBQVksSUFBMEIsRUFBRSxHQUFXO1FBQ2pELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxNQUFNLENBQUMsV0FBVyxDQUFDLEdBQVc7UUFDNUIsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLE9BQU8sSUFBSSxVQUFVLENBQUMsSUFBNEIsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMzRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsSUFBSSxVQUFVLENBQ3hDLG9CQUFvQixDQUFDLE9BQU8sRUFDNUIsTUFBTSxDQUNQLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQ2hELElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFO0NBQ2pCLENBQUMsQ0FBQztBQUlILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDM0MsSUFBSSxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsb0JBQW9CLENBQUM7SUFDeEMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMseUJBQXlCLENBQUM7Q0FDNUMsQ0FBQyxDQUFDO0FBSUgsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUM3QyxFQUFFLEVBQUUsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJLFVBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2RSxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNmLE1BQU0sRUFBRSxvQkFBb0I7UUFDNUIsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUU7UUFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQzVCLENBQUM7Q0FDSCxDQUFDLENBQUMifQ==