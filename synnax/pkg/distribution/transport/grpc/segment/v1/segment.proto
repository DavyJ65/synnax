syntax = "proto3";

import "ferrors/v1/ferrors.proto";

package segment.v1;

service IteratorService {
  rpc Iterate(stream IteratorRequest) returns (stream IteratorResponse) {}
}

message IteratorRequest {
  int32 command = 1;
  int64 span = 2;
  TimeRange range = 3;
  int64 stamp = 4;
  repeated string keys = 5;
}

message Segment {
  string channel_key = 1;
  int64 start = 2;
  bytes data = 3;
}

message IteratorResponse {
  int32 variant = 1;
  int32 node_id = 2;
  bool ack = 3;
  int32 command = 4;
  int32 counter = 5;
  ferrors.v1.ErrorPayload error = 6;
  repeated Segment segments = 7;
}

service WriterService {
  rpc Write(stream WriterRequest) returns (stream WriterResponse) {}
}

message WriterRequest {
	int32 command = 1;
  repeated string open_keys = 2;
  repeated Segment segments = 3;
}

message WriterResponse {
	int32 command = 1;
	bool ack = 2;
	int32 node_id = 3;
	int32 counter = 4;
  ferrors.v1.ErrorPayload error = 5;
}

message TimeRange {
  int64 start = 1;
  int64 end = 2;
}
